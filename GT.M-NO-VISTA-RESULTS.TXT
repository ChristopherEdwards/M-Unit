sam@ibis:~$ /usr/local/lib/yottadb/r122/ydb
YDB>D ^%RI                                        

Routine Input Utility - Converts RO file to *.m files.

Formfeed delimited <No>? 
Input device: <terminal>: /home/sam/workspace/repo/M-Unit/M-UNIT_1P6.RSA

Cache for UNIX^INT^M-UNIT 1.6 T3^~Format=Cache.S~^RAW
%RO on 30 Aug 2019   5:24 PM


Output directory : /home/sam/.yottadb/r/

%ut       %ut1      %utcover  %utt1     %utt2     %utt3     %utt4     %utt5     
%utt6     %utt7     %uttcovr  


Restored 2330 lines in 11 routines.
YDB>d ^%utt1

Running tests in NON-VERBOSE mode
For Verbose mode use DO VERBOSE^%utt1(ARG) where ARG is an integer 1 to 3
ENTER RETURN TO CONTINUE: ....
T5^%utt1 - Error count check - This is an intentional failure
.
T5^%utt1 - Error count check - Intentionally throwing a failure
......%utt3 ...........
FAIL^%utt2 - Rename of FAIL - THIS TEST SHOULD FAIL - no failure message provided
.
Loading routines to test coverage...
%utt3 

 ----------------------------------- %utt3 -----------------------------------
T1 - Test 1.-----------------------------------------------------------  [OK]
T2 - Test 2.-----------------------------------------------------------  [OK]

Ran 1 Routine, 2 Entry Tags
Checked 2 tests, with 0 failures and encountered 0 errors.........
BADCHKEQ^%utt5 -  CHKEQ should fail on unequal value - <4> vs <3> - SET UNEQUAL ON PURPOSE - SHOULD FAIL

BADCHKTF^%utt5 -  CHKTF should fail on false value - SET FALSE (0) ON PURPOSE - SHOULD FAIL

BADERROR^%utt5 -  throws an error on purpose - Error: 150372778,BADERROR+6^%utt5,%YDB-E-EXPR, Expression expected but not found

CALLFAIL^%utt5 -  called FAIL to test it - Called FAIL to test it

LEAKSBAD^%utt5 - check leaks with leak - LEAKSBAD TEST - X NOT SPECIFIED VARIABLE LEAK: X

NVLDARG1^%utt5 - check invalid arg in CHKEQ - NO VALUES INPUT TO CHKEQ^%ut - no evaluation possible
.............................................................................

Ran 6 Routines, 40 Entry Tags
Checked 116 tests, with 8 failures and encountered 1 error.
YDB>d ^%uttcovr 

Loading routines to test coverage...
%ut %ut1 %utcover %utt1 %utt2 %utt3 %utt4 %utt5 %utt6 %utt7 
	 . I $ZVERSION(1)=2 S D=$SYSTEM.Util.GetEnviron("temp")_"\test.txt" I 1 ; Windows
	      ^-----
		At column 7, line 92, source module /home/sam/.yottadb/r/_utt7.m
%YDB-E-INVFCN, Invalid function name
	 . I $ZVERSION(1)=2 S D=$SYSTEM.Util.GetEnviron("temp")_"\test.txt" I 1 ; Windows
	                               ^-----
		At column 32, line 92, source module /home/sam/.yottadb/r/_utt7.m
%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
	 I $$GETSYS^%ut()=0 O D:"NWS" ; Cache new file
	                        ^-----
		At column 25, line 94, source module /home/sam/.yottadb/r/_utt7.m
%YDB-E-DEVPARUNK, Deviceparameter unknown
	 I $$GETSYS^%ut()=0 O D:"R"
	                        ^-----
		At column 25, line 104, source module /home/sam/.yottadb/r/_utt7.m
%YDB-E-DEVPARUNK, Deviceparameter unknown
	 I $$GETSYS^%ut()=0 C D:"D"
	                        ^-----
		At column 25, line 110, source module /home/sam/.yottadb/r/_utt7.m
%YDB-E-DEVPARUNK, Deviceparameter unknown
	 . I $ZVERSION(1)=2 S D=$SYSTEM.Util.GetEnviron("temp")_"\test.txt" I 1 ; Windows
	      ^-----
		At column 7, line 129, source module /home/sam/.yottadb/r/_utt7.m
%YDB-E-INVFCN, Invalid function name
	 . I $ZVERSION(1)=2 S D=$SYSTEM.Util.GetEnviron("temp")_"\test.txt" I 1 ; Windows
	                               ^-----
		At column 32, line 129, source module /home/sam/.yottadb/r/_utt7.m
%YDB-E-SPOREOL, Either a space or an end-of-line was expected but not found
	 I $$GETSYS^%ut()=0 O D:"NWS" ; Cache new file
	                        ^-----
		At column 25, line 131, source module /home/sam/.yottadb/r/_utt7.m
%YDB-E-DEVPARUNK, Deviceparameter unknown
	 I $$GETSYS^%ut()=0 O D:"R" ; Cache read only
	                        ^-----
		At column 25, line 137, source module /home/sam/.yottadb/r/_utt7.m
%YDB-E-DEVPARUNK, Deviceparameter unknown
	 I $$GETSYS^%ut()=0 C D:"D"
	                        ^-----
		At column 25, line 141, source module /home/sam/.yottadb/r/_utt7.m
%YDB-E-DEVPARUNK, Deviceparameter unknown
%uttcovr 

------------------- RUNNING %uttcovr -------------------
...................................................................

Ran 1 Routine, 8 Entry Tags
Checked 67 tests, with 0 failures and encountered 0 errors.

------------------- RUNNING ENTRY^%uttcovr -------------------

LEAKSBAD TEST - X NOT SPECIFIED VARIABLE LEAK: X
xxxxxxxxxxxxxxxxxxxx GOING TO COV^%ut FOR %utt5 at 3



Loading routines to test coverage...
%ut1 ....
BADCHKEQ^%utt5 -  CHKEQ should fail on unequal value - <4> vs <3> - SET UNEQUAL ON PURPOSE - SHOULD FAIL

BADCHKTF^%utt5 -  CHKTF should fail on false value - SET FALSE (0) ON PURPOSE - SHOULD FAIL

BADERROR^%utt5 -  throws an error on purpose - Error: 150372778,BADERROR+6^%utt5,%YDB-E-EXPR, Expression expected but not found

CALLFAIL^%utt5 -  called FAIL to test it - Called FAIL to test it

LEAKSBAD^%utt5 - check leaks with leak - LEAKSBAD TEST - X NOT SPECIFIED VARIABLE LEAK: X

NVLDARG1^%utt5 - check invalid arg in CHKEQ - NO VALUES INPUT TO CHKEQ^%ut - no evaluation possible
.

Ran 1 Routine, 11 Entry Tags
Checked 10 tests, with 5 failures and encountered 1 error.
xxxxxxxxxxxxxxxxxxxx GOING TO COV^%ut FOR %utt5 at -1



Loading routines to test coverage...
%ut1 ....
BADCHKEQ^%utt5 -  CHKEQ should fail on unequal value - <4> vs <3> - SET UNEQUAL ON PURPOSE - SHOULD FAIL

BADCHKTF^%utt5 -  CHKTF should fail on false value - SET FALSE (0) ON PURPOSE - SHOULD FAIL

BADERROR^%utt5 -  throws an error on purpose - Error: 150372778,BADERROR+6^%utt5,%YDB-E-EXPR, Expression expected but not found

CALLFAIL^%utt5 -  called FAIL to test it - Called FAIL to test it

LEAKSBAD^%utt5 - check leaks with leak - LEAKSBAD TEST - X NOT SPECIFIED VARIABLE LEAK: X

NVLDARG1^%utt5 - check invalid arg in CHKEQ - NO VALUES INPUT TO CHKEQ^%ut - no evaluation possible
.

Ran 1 Routine, 11 Entry Tags
Checked 10 tests, with 5 failures and encountered 1 error.
xxxxxxxxxxxxxxxxxxxx GOING TO MULTAPIS for %utt4 and %ut




------------------- RUNNING ^%ut -------------------


NOW RUNNING UNIT TESTS FOR %uttcovr

...................................................................

Ran 1 Routine, 8 Entry Tags
Checked 67 tests, with 0 failures and encountered 0 errors.

NOW RUNNING UNIT TESTS FOR %utt6

.........

Ran 1 Routine, 5 Entry Tags
Checked 9 tests, with 0 failures and encountered 0 errors.

------------------- RUNNING ^%utt4 -------------------


 ----------------------------------- %utt4 -----------------------------------
MAIN - - Test coverage calculations
Loading routines to test coverage...
%utt3 

 ----------------------------------- %utt3 -----------------------------------
T1 - Test 1.-----------------------------------------------------------  [OK]
T2 - Test 2.-----------------------------------------------------------  [OK]

Ran 1 Routine, 2 Entry Tags
Checked 2 tests, with 0 failures and encountered 0 errors.-------------  [OK]

Ran 1 Routine, 1 Entry Tag
Checked 0 test, with 0 failures and encountered 0 errors.


------------ SUMMARY ------------
Ran 2 Routines, 6 Entry Tags
Checked 9 tests, with 0 failures and encountered 0 errors.
xxxxxxxxxxxxxxxxxxxx GOING TO COVERAGE for %utt4 and %ut at 3



Loading routines to test coverage...
%ut %ut1 %utcover %utt1 %utt2 %utt3 %utt4 %utt5 %utt6 %utt7 %uttcovr 

------------------- RUNNING ^%ut -------------------


NOW RUNNING UNIT TESTS FOR %uttcovr

...................................................................

Ran 1 Routine, 8 Entry Tags
Checked 67 tests, with 0 failures and encountered 0 errors.

NOW RUNNING UNIT TESTS FOR %utt6

.........

Ran 1 Routine, 5 Entry Tags
Checked 9 tests, with 0 failures and encountered 0 errors.

------------------- RUNNING ^%utt4 -------------------


 ----------------------------------- %utt4 -----------------------------------
MAIN - - Test coverage calculations
Loading routines to test coverage...
%utt3 

 ----------------------------------- %utt3 -----------------------------------
T1 - Test 1.-----------------------------------------------------------  [OK]
T2 - Test 2.-----------------------------------------------------------  [OK]

Ran 1 Routine, 2 Entry Tags
Checked 2 tests, with 0 failures and encountered 0 errors.-------------  [OK]

Ran 1 Routine, 1 Entry Tag
Checked 0 test, with 0 failures and encountered 0 errors.


------------ SUMMARY ------------
Ran 2 Routines, 6 Entry Tags
Checked 9 tests, with 0 failures and encountered 0 errors.




Overall Analysis 0 out of 0 lines covered
xxxxxxxxxxxxxxxxxxxx LISTING DATA VIA LIST







Overall Analysis 0 out of 0 lines covered
xxxxxxxxxxxxxxxxxxxx Finished in ENTRY^%uttcovr




------------------- RUNNING VERBOSE2^%utt6 -------------------


NOW RUNNING UNIT TESTS FOR %uttcovr



 ---------------------------------- %uttcovr ----------------------------------
RTNANAL - - routine analysis..--------------------------------  [OK]    0.000ms
COVCOV - - check COVCOV - remove seen lines......-------------  [OK]    0.000ms
COVRPT...........---------------------------------------------  [OK]    0.000ms
COVRPTLS - - coverage report returning text in global...........[OK]    0.000ms
TRIMDATA - - TRIMDATA in %utcover..---------------------------  [OK]    0.000ms
LIST - - LIST in %utcover............-------------------------  [OK]    0.000ms
LINEDATA - - convert code line to based on tags and offset, and identify active code lines............
 -------------------------------------------------------------  [OK]    0.000ms
TOTAGS - - convert from lines of code by line number to lines ordered by tag, line from tag, and only not covered...........
 -------------------------------------------------------------  [OK]    0.000ms

Ran 1 Routine, 8 Entry Tags
Checked 67 tests, with 0 failures and encountered 0 errors.

NOW RUNNING UNIT TESTS FOR %utt6



 ----------------------------------- %utt6 -----------------------------------
SETROUS - - generate array with indices of routines to exclude......
 -------------------------------------------------------------  [OK]    0.000ms
CHKCMDLN - check command line processing of %utt5-------------  [OK]    0.000ms
CHKGUI - check GUI processing of %utt5------------------------  [OK]    0.000ms
CKGUISET - check list of tests returned by GUISET-------------  [OK]    0.000ms
NEWSTYLE - test return of valid new style or @TEST indicators...[OK]    0.000ms

Ran 1 Routine, 5 Entry Tags
Checked 9 tests, with 0 failures and encountered 0 errors.

------------------- RUNNING VERBOSE3^%utt6 -------------------


NOW RUNNING UNIT TESTS FOR %uttcovr



 ---------------------------------- %uttcovr ----------------------------------
RTNANAL - - routine analysis..--------------------------------  [OK]    0.654ms
COVCOV - - check COVCOV - remove seen lines......-------------  [OK]    0.429ms
COVRPT...........---------------------------------------------  [OK]    2.842ms
COVRPTLS - - coverage report returning text in global...........[OK]    2.700ms
TRIMDATA - - TRIMDATA in %utcover..---------------------------  [OK]    0.138ms
LIST - - LIST in %utcover............-------------------------  [OK]    0.865ms
LINEDATA - - convert code line to based on tags and offset, and identify active code lines............
 -------------------------------------------------------------  [OK]    0.413ms
TOTAGS - - convert from lines of code by line number to lines ordered by tag, line from tag, and only not covered...........
 -------------------------------------------------------------  [OK]    0.659ms

Ran 1 Routine, 8 Entry Tags
Checked 67 tests, with 0 failures and encountered 0 errors.

NOW RUNNING UNIT TESTS FOR %utt6



 ----------------------------------- %utt6 -----------------------------------
SETROUS - - generate array with indices of routines to exclude......
 -------------------------------------------------------------  [OK]    0.188ms
CHKCMDLN - check command line processing of %utt5-------------  [OK]    0.028ms
CHKGUI - check GUI processing of %utt5------------------------  [OK]    0.033ms
CKGUISET - check list of tests returned by GUISET-------------  [OK]    0.027ms
NEWSTYLE - test return of valid new style or @TEST indicators...[OK]    2.619ms

Ran 1 Routine, 5 Entry Tags
Checked 9 tests, with 0 failures and encountered 0 errors.

------------------- RUNNING VERBOSE^%utt1(3) -------------------


Running tests in VERBOSE mode with fractional millisecond timing


 ----------------------------------- %utt1 -----------------------------------
T1 - - Make sure Start-up runs.-------------------------------  [OK]    0.070ms
T2 - - Make sure Set-up runs.---------------------------------  [OK]    0.056ms
T3 - - Make sure Teardown runs.-------------------------------  [OK]    0.054ms
T4 - Entry point using XTMENT.--------------------------------  [OK]    0.053ms
T5 - Error count check
T5^%utt1 - Error count check - This is an intentional failure
.
T5^%utt1 - Error count check - Intentionally throwing a failure
.-------------------------------------------------------------  [FAIL]    0.132ms
T6 - Succeed Entry Point...-----------------------------------  [OK]    0.082ms
T7 - Make sure we write to principal even though we are on another device..
 -------------------------------------------------------------  [OK]    0.416ms
T8 - If IO starts with another device, write to that device as if it's the pricipal device%utt3 .
 -------------------------------------------------------------  [OK]    4.846ms
COVRPTGL - coverage report returning global....---------------  [OK]    1.555ms

 ----------------------------------- %utt2 -----------------------------------
T11 - An @TEST Entry point in Another Routine invoked through XTROU offsets.
 -------------------------------------------------------------  [OK]    0.052ms
EQ - Rename of CHKEQ..----------------------------------------  [OK]    0.088ms
TF - Rename of CHKTF..----------------------------------------  [OK]    0.077ms
SUCCEED - Rename of SUCCEED.----------------------------------  [OK]    0.046ms
FAIL - Rename of FAIL - THIS TEST SHOULD FAIL
FAIL^%utt2 - Rename of FAIL - THIS TEST SHOULD FAIL - no failure message provided
--------------------------------------------------------------  [FAIL]    0.058ms
T12 - An XTENT offset entry point in Another Routine invoked through XTROU offsets.
 -------------------------------------------------------------  [OK]    0.047ms

 ----------------------------------- %utt4 -----------------------------------
MAIN - - Test coverage calculations
Loading routines to test coverage...
%utt3 

 ----------------------------------- %utt3 -----------------------------------
T1 - Test 1.-----------------------------------------------------------  [OK]
T2 - Test 2.-----------------------------------------------------------  [OK]

Ran 1 Routine, 2 Entry Tags
Checked 2 tests, with 0 failures and encountered 0 errors.----  [OK]    2.602ms

 ----------------------------------- %utt5 -----------------------------------
NEWSTYLE - identify new style test indicator functionality.---  [OK]    0.060ms
OLDSTYLE -  identify old style test indicator functionality..-  [OK]    0.072ms
OLDSTYL1 -  identify old style test indicator 2.--------------  [OK]    0.053ms
BADCHKEQ -  CHKEQ should fail on unequal value
BADCHKEQ^%utt5 -  CHKEQ should fail on unequal value - <4> vs <3> - SET UNEQUAL ON PURPOSE - SHOULD FAIL
--------------------------------------------------------------  [FAIL]    0.056ms
BADCHKTF -  CHKTF should fail on false value
BADCHKTF^%utt5 -  CHKTF should fail on false value - SET FALSE (0) ON PURPOSE - SHOULD FAIL
--------------------------------------------------------------  [FAIL]    0.053ms
BADERROR -  throws an error on purpose
BADERROR^%utt5 -  throws an error on purpose - Error: 150372778,BADERROR+6^%utt5,%YDB-E-EXPR, Expression expected but not found
--------------------------------------------------------------  [FAIL]    0.173ms
CALLFAIL -  called FAIL to test it
CALLFAIL^%utt5 -  called FAIL to test it - Called FAIL to test it
--------------------------------------------------------------  [FAIL]    0.060ms
LEAKSOK - check leaks should be ok----------------------------  [OK]    0.204ms
LEAKSBAD - check leaks with leak
LEAKSBAD^%utt5 - check leaks with leak - LEAKSBAD TEST - X NOT SPECIFIED VARIABLE LEAK: X
--------------------------------------------------------------  [FAIL]    0.138ms
NVLDARG1 - check invalid arg in CHKEQ
NVLDARG1^%utt5 - check invalid arg in CHKEQ - NO VALUES INPUT TO CHKEQ^%ut - no evaluation possible
--------------------------------------------------------------  [FAIL]    0.067ms
ISUTEST - check ISUTEST inside unit test.---------------------  [OK]    0.052ms

 ----------------------------------- %utt6 -----------------------------------
SETROUS - - generate array with indices of routines to exclude......
 -------------------------------------------------------------  [OK]    0.197ms
CHKCMDLN - check command line processing of %utt5-------------  [OK]    0.029ms
CHKGUI - check GUI processing of %utt5------------------------  [OK]    0.028ms
CKGUISET - check list of tests returned by GUISET-------------  [OK]    0.028ms
NEWSTYLE - test return of valid new style or @TEST indicators...[OK]    2.732ms

 ---------------------------------- %uttcovr ----------------------------------
RTNANAL - - routine analysis..--------------------------------  [OK]    0.707ms
COVCOV - - check COVCOV - remove seen lines......-------------  [OK]    0.433ms
COVRPT...........---------------------------------------------  [OK]    2.814ms
COVRPTLS - - coverage report returning text in global...........[OK]    2.825ms
TRIMDATA - - TRIMDATA in %utcover..---------------------------  [OK]    0.131ms
LIST - - LIST in %utcover............-------------------------  [OK]    0.845ms
LINEDATA - - convert code line to based on tags and offset, and identify active code lines............
 -------------------------------------------------------------  [OK]    0.382ms
TOTAGS - - convert from lines of code by line number to lines ordered by tag, line from tag, and only not covered...........
 -------------------------------------------------------------  [OK]    0.660ms

Ran 6 Routines, 40 Entry Tags
Checked 112 tests, with 8 failures and encountered 1 error.

------------------- RUNNING VERBOSE^%utt6 -------------------


NOW RUNNING UNIT TESTS FOR %uttcovr



 ---------------------------------- %uttcovr ----------------------------------
RTNANAL - - routine analysis..-----------------------------------------  [OK]
COVCOV - - check COVCOV - remove seen lines......----------------------  [OK]
COVRPT...........------------------------------------------------------  [OK]
COVRPTLS - - coverage report returning text in global...........-------  [OK]
TRIMDATA - - TRIMDATA in %utcover..------------------------------------  [OK]
LIST - - LIST in %utcover............----------------------------------  [OK]
LINEDATA - - convert code line to based on tags and offset, and identify active code lines............
 ----------------------------------------------------------------------  [OK]
TOTAGS - - convert from lines of code by line number to lines ordered by tag, line from tag, and only not covered...........
 ----------------------------------------------------------------------  [OK]

Ran 1 Routine, 8 Entry Tags
Checked 67 tests, with 0 failures and encountered 0 errors.

NOW RUNNING UNIT TESTS FOR %utt6



 ----------------------------------- %utt6 -----------------------------------
SETROUS - - generate array with indices of routines to exclude......---  [OK]
CHKCMDLN - check command line processing of %utt5----------------------  [OK]
CHKGUI - check GUI processing of %utt5---------------------------------  [OK]
CKGUISET - check list of tests returned by GUISET----------------------  [OK]
NEWSTYLE - test return of valid new style or @TEST indicators...-------  [OK]

Ran 1 Routine, 5 Entry Tags
Checked 9 tests, with 0 failures and encountered 0 errors.

------------------- RUNNING ^%ut -------------------


NOW RUNNING UNIT TESTS FOR %uttcovr

...................................................................

Ran 1 Routine, 8 Entry Tags
Checked 67 tests, with 0 failures and encountered 0 errors.

NOW RUNNING UNIT TESTS FOR %utt6

.........

Ran 1 Routine, 5 Entry Tags
Checked 9 tests, with 0 failures and encountered 0 errors.

------------------- RUNNING ^%ut1 -------------------


NOW RUNNING UNIT TESTS FOR %uttcovr

...................................................................

Ran 1 Routine, 8 Entry Tags
Checked 67 tests, with 0 failures and encountered 0 errors.

NOW RUNNING UNIT TESTS FOR %utt6

.........

Ran 1 Routine, 5 Entry Tags
Checked 9 tests, with 0 failures and encountered 0 errors.

------------------- RUNNING ^%utcover -------------------
...................................................................

Ran 1 Routine, 8 Entry Tags
Checked 67 tests, with 0 failures and encountered 0 errors.

------------------- RUNNING ^%utt1 -------------------

Running tests in NON-VERBOSE mode
For Verbose mode use DO VERBOSE^%utt1(ARG) where ARG is an integer 1 to 3
ENTER RETURN TO CONTINUE: ....
T5^%utt1 - Error count check - This is an intentional failure
.
T5^%utt1 - Error count check - Intentionally throwing a failure
......%utt3 ...........
FAIL^%utt2 - Rename of FAIL - THIS TEST SHOULD FAIL - no failure message provided
.
Loading routines to test coverage...
%utt3 

 ----------------------------------- %utt3 -----------------------------------
T1 - Test 1.-----------------------------------------------------------  [OK]
T2 - Test 2.-----------------------------------------------------------  [OK]

Ran 1 Routine, 2 Entry Tags
Checked 2 tests, with 0 failures and encountered 0 errors.....
BADCHKEQ^%utt5 -  CHKEQ should fail on unequal value - <4> vs <3> - SET UNEQUAL ON PURPOSE - SHOULD FAIL

BADCHKTF^%utt5 -  CHKTF should fail on false value - SET FALSE (0) ON PURPOSE - SHOULD FAIL

BADERROR^%utt5 -  throws an error on purpose - Error: 150372778,BADERROR+6^%utt5,%YDB-E-EXPR, Expression expected but not found

CALLFAIL^%utt5 -  called FAIL to test it - Called FAIL to test it

LEAKSBAD^%utt5 - check leaks with leak - LEAKSBAD TEST - X NOT SPECIFIED VARIABLE LEAK: X

NVLDARG1^%utt5 - check invalid arg in CHKEQ - NO VALUES INPUT TO CHKEQ^%ut - no evaluation possible
.............................................................................

Ran 6 Routines, 40 Entry Tags
Checked 112 tests, with 8 failures and encountered 1 error.

------------------- RUNNING ^%utt6 -------------------


NOW RUNNING UNIT TESTS FOR %uttcovr

...................................................................

Ran 1 Routine, 8 Entry Tags
Checked 67 tests, with 0 failures and encountered 0 errors.

NOW RUNNING UNIT TESTS FOR %utt6

.........

Ran 1 Routine, 5 Entry Tags
Checked 9 tests, with 0 failures and encountered 0 errors.

------------------- RUNNING ^%utt7 -------------------

Running tests in VERBOSE mode
ENTER RETURN TO CONTINUE: 

 ----------------------------------- %utt7 -----------------------------------
T1 - - Make sure Start-up Ran.--------------------------------  [OK]    0.071ms
T5 - - ditto
T5^%utt7 - - ditto - This is an intentional failure
.
T5^%utt7 - - ditto - Intentionally throwing a failure
.-------------------------------------------------------------  [FAIL]    0.138ms

 ----------------------------------- %utt1 -----------------------------------

 ----------------------------------- %utt2 -----------------------------------

 ----------------------------------- %utt4 -----------------------------------

 ----------------------------------- %utt5 -----------------------------------

 ----------------------------------- %utt6 -----------------------------------

 ---------------------------------- %uttcovr ----------------------------------

Ran 7 Routines, 2 Entry Tags
Checked 5 tests, with 2 failures and encountered 0 errors.


------------ SUMMARY ------------
Ran 27 Routines, 128 Entry Tags
Checked 417 tests, with 18 failures and encountered 2 errors.


Routine %ut             (66.01%)   202 out of 306 lines covered
  - Detailed Breakdown
 Tag %ut^%ut              (100.00%)   2 out of 2 lines covered
 Tag CHKEQ^%ut            (100.00%)   18 out of 18 lines covered
 Tag CHKLEAKS^%ut         (100.00%)   2 out of 2 lines covered
 Tag CHKTF^%ut            (100.00%)   15 out of 15 lines covered
 Tag COV^%ut              (100.00%)   2 out of 2 lines covered
 Tag COVERAGE^%ut         (100.00%)   2 out of 2 lines covered
 Tag DOSET^%ut              (0.00%)   0 out of 6 lines covered
   the following is a list of the lines **NOT** covered
     DOSET+4   N %utROU,%utLIST
     DOSET+5   I '$D(%utVERB) S %utVERB=0
     DOSET+6   S %utLIST=0
     DOSET+7   D GETSET($G(IEN),.%utROU,.%utLIST)
     DOSET+8   I %utLIST>0  N IEN,%ut D SETUT,EN1(.%utROU,%utLIST)
     DOSET+9   Q
 Tag EN^%ut               (100.00%)   7 out of 7 lines covered
 Tag EN1^%ut              (100.00%)   68 out of 68 lines covered
 Tag EQ^%ut               (100.00%)   2 out of 2 lines covered
 Tag ERROR^%ut             (55.56%)   5 out of 9 lines covered
   the following is a list of the lines **NOT** covered
     ERROR+7   . S %ut("CNT")=%ut("CNT")+1
     ERROR+8   . S %utERR=%utERR+1
     ERROR+9   . S @%ut("RSLT")@(%ut("CNT"))=%ut("LOC")_XTGUISEP_"ERROR"_XTGUISEP_$S($$GETSYS()=47:$ZS,1:$ZE)
     ERROR+10   . Q
 Tag ERROR1^%ut           (100.00%)   9 out of 9 lines covered
 Tag FAIL^%ut             (100.00%)   2 out of 2 lines covered
 Tag GETLIST^%ut            (0.00%)   0 out of 12 lines covered
   the following is a list of the lines **NOT** covered
     GETLIST+1   N I,%utROUL,%utROUN,%ut,XTCOMNT,XTVALUE,%utCNT
     GETLIST+2   S XTVALUE=$NA(^TMP("GUI-MUNIT",$J)) K @XTVALUE
     GETLIST+3   S %utCNT=0,XTCOMNT=""
     GETLIST+4   D GETTREE^%ut1(.%utROU,%utLIST)
     GETLIST+5   F I=1:1 Q:'$D(%utROU(I))  S %utROUL(%utROU(I))=""
     GETLIST+6   S %utROUN="" F  S %utROUN=$O(%utROUL(%utROUN)) Q:%utROUN=""  D LOAD(%utROUN,.%utCNT,XTVALUE,XTCOMNT,.%utROUL)
     GETLIST+8   S I="" F  S I=$O(@XTVALUE@(I)) Q:I=""  S %utLINE=^(I) I $P(%utLINE,U,2)="@" S @XTVALUE@(I)=$P(%utLINE,U)_U_$P(%utLINE,U,3,99)
     GETLIST+9   M @%utRSLT=@XTVALUE
     GETLIST+10   K @%utRSLT@("SHUTDOWN")
     GETLIST+11   K @%utRSLT@("STARTUP")
     GETLIST+12   S @XTVALUE@("LASTROU")=""
     GETLIST+13   Q
 Tag GETSET^%ut             (0.00%)   0 out of 4 lines covered
   the following is a list of the lines **NOT** covered
     GETSET+1   N IENS,%utROOT
     GETSET+3   S IENS=IEN_"," D GETS^DIQ(17.9001,IENS,"1*","","%utROOT")
     GETSET+4   S %utLIST=0,IENS="" F  S IENS=$O(%utROOT(17.90011,IENS)) Q:IENS=""  S %utLIST=%utLIST+1,%utROU(%utLIST)=%utROOT(17.90011,IENS,.01)
     GETSET+5   Q
 Tag GETSYS^%ut           (100.00%)   3 out of 3 lines covered
 Tag GETUTVAL^%ut         (100.00%)   5 out of 5 lines covered
 Tag GTMVER^%ut           (100.00%)   1 out of 1 lines covered
 Tag GUILOAD^%ut            (0.00%)   0 out of 8 lines covered
   the following is a list of the lines **NOT** covered
     GUILOAD+1   N %utROU,%ut
     GUILOAD+2   D SETUT
     GUILOAD+3   S %ut("RSLT")=$NA(^TMP("MUNIT-%utRSLT",$J)) K @%ut("RSLT")
     GUILOAD+4   S %utROU(1)=%utROUN
     GUILOAD+5   D GETLIST(.%utROU,1,%ut("RSLT"))
     GUILOAD+6   S @%ut("RSLT")@(1)=(@%ut("RSLT")@(1))_"^1"
     GUILOAD+7   S %utRSLT=%ut("RSLT")
     GUILOAD+8   Q
 Tag GUINEXT^%ut            (0.00%)   0 out of 43 lines covered
   the following is a list of the lines **NOT** covered
     GUINEXT+5   N %utETRY,%utROUT,XTOLROU,XTVALUE,%utERR,%utGUI
     GUINEXT+6   N %ut
     GUINEXT+7   I $G(XTGUISEP)="" S XTGUISEP="^"
     GUINEXT+8   D SETUT
     GUINEXT+9   S %ut("LOC")=%utLOC
     GUINEXT+10   S %ut("CURR")=0,%ut("ECNT")=0,%ut("FAIL")=0,%ut("CHK")=0,%ut("NENT")=0,%ut("ERRN")=0
     GUINEXT+11   S XTVALUE=$NA(^TMP("GUI-MUNIT",$J))
     GUINEXT+12   S %ut("RSLT")=$NA(^TMP("GUINEXT",$J)) K @%ut("RSLT")
     GUINEXT+13   S %utRSLT=%ut("RSLT")
     GUINEXT+14   S %utETRY=$P(%utLOC,U),%utROUT=$P(%utLOC,U,2),XTOLROU=$G(@XTVALUE@("LASTROU"))
     GUINEXT+15   S %utGUI=1
     GUINEXT+16   S %ut("CHK")=0,%ut("CNT")=1,%utERR=0
     GUINEXT+17   D  I %utROUT="" S @%utRSLT@(1)="" Q  ; 141018 JLI - Have to leave XTVALUE intact, in case they simply run again for STARTUP, etc.
     GUINEXT+18   . I XTOLROU="",$D(@XTVALUE@("STARTUP")) D
     GUINEXT+19   . . S %ut("LOC")=@XTVALUE@("STARTUP")
     GUINEXT+20   . . N $ETRAP S $ETRAP="D ERROR^%ut"
     GUINEXT+21   . . D @(@XTVALUE@("STARTUP"))
     GUINEXT+22   . . Q
     GUINEXT+23   . S @XTVALUE@("LASTROU")=%utROUT I %utROUT'="",$T(@("SETUP^"_%utROUT))'="" D
     GUINEXT+24   . . S %ut("LOC")="SETUP^"_%utROUT
     GUINEXT+25   . . N $ETRAP S $ETRAP="D ERROR^%ut"
     GUINEXT+26   . . D @("SETUP^"_%utROUT)
     GUINEXT+27   . . Q
     GUINEXT+28   . I %utROUT="",$D(@XTVALUE@("SHUTDOWN")) D
     GUINEXT+29   . . S %ut("LOC")=@XTVALUE@("SHUTDOWN")
     GUINEXT+30   . . N $ETRAP S $ETRAP="D ERROR^%ut"
     GUINEXT+31   . . D @(@XTVALUE@("SHUTDOWN"))
     GUINEXT+32   . . Q
     GUINEXT+33   . Q
     GUINEXT+34   S %ut("LOC")=%utLOC
     GUINEXT+35   S %ut("CHK")=0,%ut("CNT")=1,%utERR=0
     GUINEXT+36   D  ; to limit range of error trap so we continue through other tests
     GUINEXT+37   . N $ETRAP S $ETRAP="D ERROR^%ut"
     GUINEXT+38   . D @%ut("LOC")
     GUINEXT+39   . Q
     GUINEXT+40   I $T(@("TEARDOWN^"_%utROUT))'="" D
     GUINEXT+41   . S %ut("LOC")="TEARDOWN^"_%utROUT
     GUINEXT+42   . N $ETRAP S $ETRAP="D ERROR^%ut"
     GUINEXT+43   . D @("TEARDOWN^"_%utROUT)
     GUINEXT+44   . Q
     GUINEXT+45   S @%ut("RSLT")@(1)=%ut("CHK")_XTGUISEP_(%ut("CNT")-1-%utERR)_XTGUISEP_%utERR
     GUINEXT+46   K ^TMP("%ut",$J,"UTVALS")
     GUINEXT+47   Q
 Tag GUISET^%ut             (0.00%)   0 out of 8 lines covered
   the following is a list of the lines **NOT** covered
     GUISET+1   N %utROU,%utLIST,%ut
     GUISET+2   D SETUT
     GUISET+3   S %ut("RSLT")=$NA(^TMP("MUNIT-%utRSLT",$J)) K @%ut("RSLT")
     GUISET+4   D GETSET(XTSET,.%utROU,.%utLIST)
     GUISET+5   D GETLIST(.%utROU,%utLIST,%ut("RSLT"))
     GUISET+6   S @%ut("RSLT")@(1)=(@%ut("RSLT")@(1))_"^1" ; 110719 mark as new version
     GUISET+7   S %utRSLT=%ut("RSLT")
     GUISET+8   Q
 Tag ISUTEST^%ut          (100.00%)   1 out of 1 lines covered
 Tag LOAD^%ut               (0.00%)   0 out of 10 lines covered
   the following is a list of the lines **NOT** covered
     LOAD+1   I $T(@("^"_%utROUN))="" S %utNCNT=%utNCNT+1,@XTVALUE@(%utNCNT)=%utROUN_"^^*** ERROR - ROUTINE NAME NOT FOUND" Q
     LOAD+2   S %utNCNT=%utNCNT+1,@XTVALUE@(%utNCNT)=%utROUN_U_U_XTCOMNT
     LOAD+3   N %utI,XTX1,XTX2,LINE,LIST,I
     LOAD+4   I $T(@("STARTUP^"_%utROUN))'="",'$D(@XTVALUE@("STARTUP")) S @XTVALUE@("STARTUP")="STARTUP^"_%utROUN
     LOAD+5   I $T(@("SHUTDOWN^"_%utROUN))'="",'$D(@XTVALUE@("SHUTDOWN")) S @XTVALUE@("SHUTDOWN")="SHUTDOWN^"_%utROUN
     LOAD+6   D NEWSTYLE^%ut1(.LIST,%utROUN)
     LOAD+7   F I=1:1:LIST S %utNCNT=%utNCNT+1,@XTVALUE@(%utNCNT)=%utROUN_U_LIST(I)
     LOAD+8   F %utI=1:1 S LINE=$T(@("XTENT+"_%utI_"^"_%utROUN)) S XTX1=$P(LINE,";",3) Q:XTX1=""  S XTX2=$P(LINE,";",4),%utNCNT=%utNCNT+1,@XTVALUE@(%utNCNT)=%utROUN_U_XTX1_U_XTX2
     LOAD+9   F %utI=1:1 S LINE=$T(@("XTROU+"_%utI_"^"_%utROUN)) S XTX1=$P(LINE,";",3) Q:XTX1=""  S XTCOMNT=$P(LINE,";",4) I '$D(%utROUL(XTX1)) S %utROUL(XTX1)="" D LOAD(XTX1,.%utNCNT,XTVALUE,XTCOMNT,.%ut
ROUL)
     LOAD+10   Q
 Tag LSTUTVAL^%ut         (100.00%)   4 out of 4 lines covered
 Tag MULTAPIS^%ut         (100.00%)   2 out of 2 lines covered
 Tag PICKSET^%ut          (100.00%)   3 out of 3 lines covered
 Tag RUNSET^%ut             (0.00%)   0 out of 9 lines covered
   the following is a list of the lines **NOT** covered
     RUNSET+1   N Y,%utROU,%utLIST,%utVERB
     RUNSET+2   Q:$G(SETNAME)=""
     RUNSET+3   S %utVERB=$G(VERBOSE,0)
     RUNSET+4   S Y=+$$FIND1^DIC(17.9001,"","X",SETNAME) Q:Y'>0
     RUNSET+5   D GETSET(Y,.%utROU,.%utLIST)
     RUNSET+6   N Y,SETNAME,%ut
     RUNSET+7   D SETUT
     RUNSET+8   D EN1(.%utROU,%utLIST)
     RUNSET+9   Q
 Tag SETUT^%ut            (100.00%)   6 out of 6 lines covered
 Tag SUCCEED^%ut          (100.00%)   6 out of 6 lines covered
 Tag TF^%ut               (100.00%)   2 out of 2 lines covered
 Tag VERBOSE^%ut          (100.00%)   11 out of 11 lines covered
 Tag VERBOSE1^%ut         (100.00%)   4 out of 4 lines covered
 Tag ZHDIF^%ut            (100.00%)   10 out of 10 lines covered
 Tag en^%ut               (100.00%)   2 out of 2 lines covered
 Tag eq^%ut               (100.00%)   2 out of 2 lines covered
 Tag fail^%ut             (100.00%)   2 out of 2 lines covered
 Tag succeed^%ut          (100.00%)   2 out of 2 lines covered
 Tag tf^%ut               (100.00%)   2 out of 2 lines covered


Routine %ut1            (82.82%)   217 out of 262 lines covered
  - Detailed Breakdown
 Tag %ut1^%ut1            (100.00%)   2 out of 2 lines covered
 Tag ACTLINES^%ut1        (100.00%)   10 out of 10 lines covered
 Tag CACHECOV^%ut1          (0.00%)   0 out of 11 lines covered
   the following is a list of the lines **NOT** covered
     CACHECOV+2   N %N,DIF,I,METRIC,METRICNT,METRICS,MTRICNUM,ROUNAME,ROUNUM,X,XCNP,XXX
     CACHECOV+3   S ROUNUM=##class(%Monitor.System.LineByLine).GetRoutineCount(),METRICS=##class(%Monitor.System.LineByLine).GetMetrics(),METRICNT=$l(METRICS,",")
     CACHECOV+4   S MTRICNUM=0 F I=1:1:METRICNT S METRIC=$P(METRICS,",",I) I METRIC="RtnLine" S MTRICNUM=I Q
     CACHECOV+6   F I=1:1:ROUNUM D
     CACHECOV+7   . S ROUNAME=##class(%Monitor.System.LineByLine).GetRoutineName(I)
     CACHECOV+9   . S DIF=$NA(@SURVGL@(ROUNAME)),DIF=$E(DIF,1,$L(DIF)-1)_",",XCNP=0,X=ROUNAME
     CACHECOV+10   . X "N %,%N S %N=0 X ""ZL @X F XCNP=XCNP+1:1 S %N=%N+1,%=$T(+%N) Q:$L(%)=0  S @(DIF_XCNP_"""",0)"""")=%""" ; JLI see 160701 note in comments at top
     CACHECOV+12   F XXX=1:1:ROUNUM D GETVALS(XXX,SURVGL,MTRICNUM)
     CACHECOV+13   D TOTAGS(SURVGL,1)
     CACHECOV+14   D ##class(%Monitor.System.LineByLine).Stop()
     CACHECOV+15   Q
 Tag CHECKTAG^%ut1        (100.00%)   5 out of 5 lines covered
 Tag CHEKTEST^%ut1        (100.00%)   17 out of 17 lines covered
 Tag CHKTAGS^%ut1         (100.00%)   10 out of 10 lines covered
 Tag COV^%ut1              (61.76%)   21 out of 34 lines covered
   the following is a list of the lines **NOT** covered
     COV+31   . K @COVGL,@RESGL,@ORIGGL,@SURVGL
     COV+32   . D RTNANAL(.RTNS,ORIGGL)
     COV+33   . S ^TMP("%utcovrunning",$J)=1,%utcovxx=1
     COV+35   . I ($$GETSYS^%ut()=47) VIEW "TRACE":1:COVGL  ; GT.M START PROFILING
     COV+38   . . N NMSP,NMSPV S NMSP="",NMSPV="" F  S NMSPV=$O(RTNS(NMSPV)) Q:NMSPV=""  S NMSP=NMSP_NMSPV_","
     COV+39   . . S NMSP=$E(NMSP,1,$L(NMSP)-1)
     COV+40   . . S STATUS=##class(%Monitor.System.LineByLine).Start($lb(NMSP),$lb("RtnLine"),$lb($j))
     COV+41   . . I +STATUS'=1 D DecomposeStatus^%apiOBJ(STATUS,.ERR,"-d") F I=1:1:ERR W ERR(I),!
     COV+42   . . I +STATUS'=1 K ERR S EXIT=1
     COV+58   . I ($$GETSYS^%ut()=0) D CACHECOV(SURVGL) I 1
     COV+59   . K %utcovxx,^TMP("%utcovrunning",$J)
     COV+65   D COVRPT(ORIGGL,SURVGL,RESGL,VERBOSITY)
     COV+66   QUIT
 Tag COVCOV^%ut1          (100.00%)   9 out of 9 lines covered
 Tag COVRPT^%ut1          (100.00%)   5 out of 5 lines covered
 Tag COVRPTLS^%ut1        (100.00%)   31 out of 31 lines covered
 Tag FAIL^%ut1            (100.00%)   12 out of 12 lines covered
 Tag GETRTNS^%ut1          (73.68%)   14 out of 19 lines covered
   the following is a list of the lines **NOT** covered
     GETRTNS+21   . N NMSP S NMSP=$G(NMSPS)
     GETRTNS+22   . D:NMSP]""  S NMSP="" F  S NMSP=$O(NMSPS(NMSP)) Q:NMSP=""  D
     GETRTNS+23   . . S NMSP1=NMSP I NMSP["*" S NMSP1=$P(NMSP,"*")
     GETRTNS+24   . . I $D(^$R(NMSP1)) S RTNS(NMSP1)=""
     GETRTNS+25   . . I NMSP["*" S RTN=NMSP1 F  S RTN=$O(^$R(RTN)) Q:RTN'[NMSP1  W RTN," " S RTNS(RTN)=""
 Tag GETTAG^%ut1          (100.00%)   4 out of 4 lines covered
 Tag GETTREE^%ut1         (100.00%)   7 out of 7 lines covered
 Tag GETVALS^%ut1           (0.00%)   0 out of 11 lines covered
   the following is a list of the lines **NOT** covered
     GETVALS+2   N LINE,MORE,ROUNAME,RSET,VAL,X
     GETVALS+4   S RSET=##class(%ResultSet).%New("%Monitor.System.LineByLine:Result")
     GETVALS+5   S ROUNAME=##class(%Monitor.System.LineByLine).GetRoutineName(ROUNUM)
     GETVALS+6   S LINE=RSET.Execute(ROUNAME)
     GETVALS+7   F LINE=1:1 S MORE=RSET.Next() Q:'MORE  D
     GETVALS+8   . S X=RSET.GetData(1)
     GETVALS+9   . S VAL=$LI(X,MTRICNUM)
     GETVALS+10   . S @GLOB@(ROUNAME,LINE,"C")=+VAL ; values are 0 if not seen, otherwises positive number
     GETVALS+11   . Q
     GETVALS+12   D RSET.Close()
     GETVALS+13   Q
 Tag GTMCOV^%ut1           (50.00%)   2 out of 4 lines covered
   the following is a list of the lines **NOT** covered
     GTMCOV+3   D COVCOV(SURVGL,COVGL) ; Venn diagram matching between globals
     GTMCOV+4   QUIT
 Tag LINEDATA^%ut1        (100.00%)   9 out of 9 lines covered
 Tag NEWSTYLE^%ut1        (100.00%)   4 out of 4 lines covered
 Tag NVLDARG^%ut1         (100.00%)   11 out of 11 lines covered
 Tag RESETIO^%ut1         (100.00%)   2 out of 2 lines covered
 Tag RTNANAL^%ut1          (89.66%)   26 out of 29 lines covered
   the following is a list of the lines **NOT** covered
     RTNANAL+23   . . . . S @GL@(RTN,TAG,0)=LN
     RTNANAL+24   . . . . Q
     RTNANAL+28   . . . . S @GL@(RTN,TAG,0)=LN                             ; Otherwise, store for testing
 Tag SETIO^%ut1           (100.00%)   2 out of 2 lines covered
 Tag TOTAGS^%ut1          (100.00%)   13 out of 13 lines covered
 Tag UP^%ut1              (100.00%)   1 out of 1 lines covered


Routine %utcover       (100.00%)   108 out of 108 lines covered
  - Detailed Breakdown
 Tag %utcover^%utcover    (100.00%)   2 out of 2 lines covered
 Tag CHKLEAKS^%utcover    (100.00%)   13 out of 13 lines covered
 Tag COVENTRY^%utcover    (100.00%)   15 out of 15 lines covered
 Tag COVERAGE^%utcover    (100.00%)   14 out of 14 lines covered
 Tag COVRPTGL^%utcover    (100.00%)   14 out of 14 lines covered
 Tag LIST^%utcover        (100.00%)   38 out of 38 lines covered
 Tag MULTAPIS^%utcover    (100.00%)   5 out of 5 lines covered
 Tag SETROUS^%utcover     (100.00%)   4 out of 4 lines covered
 Tag TRIMDATA^%utcover    (100.00%)   3 out of 3 lines covered


Routine %ut             (66.01%)   202 out of 306 lines covered
  - Summary
 Tag %ut^%ut              (100.00%)   2 out of 2 lines covered
 Tag CHKEQ^%ut            (100.00%)   18 out of 18 lines covered
 Tag CHKLEAKS^%ut         (100.00%)   2 out of 2 lines covered
 Tag CHKTF^%ut            (100.00%)   15 out of 15 lines covered
 Tag COV^%ut              (100.00%)   2 out of 2 lines covered
 Tag COVERAGE^%ut         (100.00%)   2 out of 2 lines covered
 Tag DOSET^%ut              (0.00%)   0 out of 6 lines covered
 Tag EN^%ut               (100.00%)   7 out of 7 lines covered
 Tag EN1^%ut              (100.00%)   68 out of 68 lines covered
 Tag EQ^%ut               (100.00%)   2 out of 2 lines covered
 Tag ERROR^%ut             (55.56%)   5 out of 9 lines covered
 Tag ERROR1^%ut           (100.00%)   9 out of 9 lines covered
 Tag FAIL^%ut             (100.00%)   2 out of 2 lines covered
 Tag GETLIST^%ut            (0.00%)   0 out of 12 lines covered
 Tag GETSET^%ut             (0.00%)   0 out of 4 lines covered
 Tag GETSYS^%ut           (100.00%)   3 out of 3 lines covered
 Tag GETUTVAL^%ut         (100.00%)   5 out of 5 lines covered
 Tag GTMVER^%ut           (100.00%)   1 out of 1 lines covered
 Tag GUILOAD^%ut            (0.00%)   0 out of 8 lines covered
 Tag GUINEXT^%ut            (0.00%)   0 out of 43 lines covered
 Tag GUISET^%ut             (0.00%)   0 out of 8 lines covered
 Tag ISUTEST^%ut          (100.00%)   1 out of 1 lines covered
 Tag LOAD^%ut               (0.00%)   0 out of 10 lines covered
 Tag LSTUTVAL^%ut         (100.00%)   4 out of 4 lines covered
 Tag MULTAPIS^%ut         (100.00%)   2 out of 2 lines covered
 Tag PICKSET^%ut          (100.00%)   3 out of 3 lines covered
 Tag RUNSET^%ut             (0.00%)   0 out of 9 lines covered
 Tag SETUT^%ut            (100.00%)   6 out of 6 lines covered
 Tag SUCCEED^%ut          (100.00%)   6 out of 6 lines covered
 Tag TF^%ut               (100.00%)   2 out of 2 lines covered
 Tag VERBOSE^%ut          (100.00%)   11 out of 11 lines covered
 Tag VERBOSE1^%ut         (100.00%)   4 out of 4 lines covered
 Tag ZHDIF^%ut            (100.00%)   10 out of 10 lines covered
 Tag en^%ut               (100.00%)   2 out of 2 lines covered
 Tag eq^%ut               (100.00%)   2 out of 2 lines covered
 Tag fail^%ut             (100.00%)   2 out of 2 lines covered
 Tag succeed^%ut          (100.00%)   2 out of 2 lines covered
 Tag tf^%ut               (100.00%)   2 out of 2 lines covered


Routine %ut1            (82.82%)   217 out of 262 lines covered
  - Summary
 Tag %ut1^%ut1            (100.00%)   2 out of 2 lines covered
 Tag ACTLINES^%ut1        (100.00%)   10 out of 10 lines covered
 Tag CACHECOV^%ut1          (0.00%)   0 out of 11 lines covered
 Tag CHECKTAG^%ut1        (100.00%)   5 out of 5 lines covered
 Tag CHEKTEST^%ut1        (100.00%)   17 out of 17 lines covered
 Tag CHKTAGS^%ut1         (100.00%)   10 out of 10 lines covered
 Tag COV^%ut1              (61.76%)   21 out of 34 lines covered
 Tag COVCOV^%ut1          (100.00%)   9 out of 9 lines covered
 Tag COVRPT^%ut1          (100.00%)   5 out of 5 lines covered
 Tag COVRPTLS^%ut1        (100.00%)   31 out of 31 lines covered
 Tag FAIL^%ut1            (100.00%)   12 out of 12 lines covered
 Tag GETRTNS^%ut1          (73.68%)   14 out of 19 lines covered
 Tag GETTAG^%ut1          (100.00%)   4 out of 4 lines covered
 Tag GETTREE^%ut1         (100.00%)   7 out of 7 lines covered
 Tag GETVALS^%ut1           (0.00%)   0 out of 11 lines covered
 Tag GTMCOV^%ut1           (50.00%)   2 out of 4 lines covered
 Tag LINEDATA^%ut1        (100.00%)   9 out of 9 lines covered
 Tag NEWSTYLE^%ut1        (100.00%)   4 out of 4 lines covered
 Tag NVLDARG^%ut1         (100.00%)   11 out of 11 lines covered
 Tag RESETIO^%ut1         (100.00%)   2 out of 2 lines covered
 Tag RTNANAL^%ut1          (89.66%)   26 out of 29 lines covered
 Tag SETIO^%ut1           (100.00%)   2 out of 2 lines covered
 Tag TOTAGS^%ut1          (100.00%)   13 out of 13 lines covered
 Tag UP^%ut1              (100.00%)   1 out of 1 lines covered


Routine %utcover       (100.00%)   108 out of 108 lines covered
  - Summary
 Tag %utcover^%utcover    (100.00%)   2 out of 2 lines covered
 Tag CHKLEAKS^%utcover    (100.00%)   13 out of 13 lines covered
 Tag COVENTRY^%utcover    (100.00%)   15 out of 15 lines covered
 Tag COVERAGE^%utcover    (100.00%)   14 out of 14 lines covered
 Tag COVRPTGL^%utcover    (100.00%)   14 out of 14 lines covered
 Tag LIST^%utcover        (100.00%)   38 out of 38 lines covered
 Tag MULTAPIS^%utcover    (100.00%)   5 out of 5 lines covered
 Tag SETROUS^%utcover     (100.00%)   4 out of 4 lines covered
 Tag TRIMDATA^%utcover    (100.00%)   3 out of 3 lines covered


Routine %ut      (66.01%)   202 out of 306 lines covered
Routine %ut1      (82.82%)   217 out of 262 lines covered
Routine %utcover     (100.00%)   108 out of 108 lines covered


Overall Analysis 527 out of 676 lines covered (77% coverage)
